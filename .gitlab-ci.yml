# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

default:
  image: node:22

stages:
  - test
  - build

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

cache:
  paths:
    - node_modules/

variables:
  ELECTRON_CACHE: "$CI_PROJECT_DIR/.cache/electron"
  ELECTRON_BUILDER_CACHE: "$CI_PROJECT_DIR/.cache/electron-builder"
  # Adds github as CA to local linux instance to download electron binary
  GIT_SSL_NO_VERIFY: "1"

before_script:
  # - apt-get update && \
  #   apt-get install openssl curl
  # - echo "" | openssl s_client -host api.github.com -port 443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > \
  #   /usr/local/share/ca-certificates/api-github-com.crt
  # - cat /usr/local/share/ca-certificates/api-github-com.crt >> /etc/ssl/certs/ca-certificates.crt
  - npm ci
  - npm install

build_linux:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "pipeline-fixes"'
  script:
    # Does not work.
    # total_hours_lost_here = 15
    # - npx electron-vite build --outDir=release

    - npm run buildlinux
    - ls -a
    - ls release -a
    - ls release -lh
  artifacts:
    paths:
      - release/**.AppImage
      - release/**.exe
      - release/**.msi
    exclude:
      - release/**/*.yml
